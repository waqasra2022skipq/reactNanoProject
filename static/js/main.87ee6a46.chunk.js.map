{"version":3,"sources":["components/Book.js","components/BookShelf.js","components/ListBooks.js","components/SearchBook.js","BooksAPI.js","App.js","index.js"],"names":["Book","props","book","console","log","authors","undefined","imageLinks","thumbnail","className","style","width","height","backgroundImage","onChange","e","target","value","shelf","changeShelf","defaultValue","disabled","title","join","BookShelf","books","map","key","ListBooks","currentlyReading","wantToRead","read","to","SearchBook","useState","query","setQuery","getTheInput","onTextEntered","searchedBooks","onClick","type","placeholder","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","update","id","method","body","JSON","stringify","App","updateWantToRead","updateCurrentlyReading","updateRead","idHolder","updateIDHolder","useEffect","a","reBooks","updateCats","fetchBooks","reads","wantToReads","currentlyReadings","obj","forEach","push","updateSearchedBooks","updateSearch","val","maxResults","search","error","syncedBooks","path","exact","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87ee6a46.chunk.js","sourcesContent":["const Book = (props)=>{\r\n    const book = props.book\r\n    console.log()\r\n    const authors = (book.authors === undefined) ? []:book.authors \r\n    const imageLinks = (book.imageLinks === undefined) ? {thumbnail:''}:book.imageLinks\r\n    const changeShelf = (e)=>{\r\n        if(e.target.value === '') return\r\n        book.shelf = e.target.value\r\n        props.changeShelf(book)\r\n    }\r\n    return(\r\n        <div className=\"book\">\r\n            <div className=\"book-top\">\r\n                <div\r\n                className=\"book-cover\"\r\n                style={{\r\n                    width: 128,\r\n                    height: 193,\r\n                    backgroundImage:\r\n                    'url(\"'+ imageLinks.thumbnail+'\")',\r\n                }}\r\n                ></div>\r\n                <div className=\"book-shelf-changer\">\r\n                <select onChange={changeShelf} defaultValue={book.shelf}>\r\n                    <option value=\"\" disabled>\r\n                    Move to...\r\n                    </option>\r\n                    <option value=\"currentlyReading\" disabled={\"currentlyReading\" === book.shelf}>\r\n                    Currently Reading\r\n                    </option>\r\n                    <option value=\"wantToRead\" disabled={\"wantToRead\" === book.shelf} >Want to Read</option>\r\n                    <option value=\"read\" disabled={\"read\" === book.shelf}>Read</option>\r\n                    <option value=\"none\" >None</option>\r\n                </select>\r\n                </div>\r\n            </div>\r\n            <div className=\"book-title\">{book.title}</div>\r\n            <div className=\"book-authors\">{authors.join(', ')}</div>\r\n            </div>\r\n    )\r\n}\r\nexport default Book","import Book from \"./Book\"\r\n\r\nconst BookShelf = (props)=>{\r\n    const books = props.books\r\n    return(\r\n        <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">{props.title}</h2>\r\n            <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                {\r\n                    books.map((book, key)=>{\r\n                        return(\r\n                            <li key={key}>\r\n                                <Book book={book} changeShelf={props.changeShelf}/>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n                </ol>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default BookShelf","import BookShelf from \"./BookShelf\"\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ListBooks = (props)=>{\r\n    \r\n    return(\r\n        <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n              <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n              <div>\r\n                  <BookShelf title=\"Currently Reading\" books={props.currentlyReading} changeShelf={props.changeShelf}/>\r\n                  <BookShelf title=\"Want To Read\" books={props.wantToRead} changeShelf={props.changeShelf}/>\r\n                  <BookShelf title=\"Read\" books={props.read} changeShelf={props.changeShelf}/>\r\n              </div>\r\n            </div>\r\n            <div className=\"open-search\">\r\n              <Link to=\"/search\">\r\n                Add a book\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        \r\n    )\r\n}\r\nexport default ListBooks\r\n","import Book from \"./Book\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nconst SearchBook = (props)=>{\r\n  const [query, setQuery] = useState(\"\") \r\n    const getTheInput = (e)=>{\r\n      setQuery(e.target.value)\r\n      props.onTextEntered(e.target.value)\r\n    }\r\n    const books = props.searchedBooks\r\n    return(\r\n        <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <Link to=\"/reactNanoProject\" className=\"close-search\" onClick={getTheInput}>\r\n            </Link>\r\n            <div className=\"search-books-input-wrapper\">\r\n              <input\r\n                onChange={getTheInput}\r\n                type=\"text\"\r\n                value={query}\r\n                placeholder=\"Search by title, author, or ISBN\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">\r\n              {\r\n                books && books.map((book, key)=>{\r\n                        return(\r\n                            <li key={key}>\r\n                                <Book book={book} changeShelf={props.changeShelf}/>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ol>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SearchBook","const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n  \r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query, maxResults }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","import \"./App.css\";\r\nimport ListBooks from \"./components/ListBooks\";\r\nimport SearchBook from \"./components/SearchBook\";\r\nimport { getAll, update, search } from \"./BooksAPI\"\r\nimport { useState,useEffect } from \"react\"\r\n\r\nimport {Routes, Route} from 'react-router-dom'\r\nfunction App() {\r\n    const [wantToRead, updateWantToRead] = useState([])\r\n    const [currentlyReading, updateCurrentlyReading] = useState([])\r\n    const [read, updateRead] = useState([])\r\n    const [idHolder, updateIDHolder] = useState({})\r\n    useEffect(()=>{\r\n        async function fetchBooks(){\r\n            let reBooks = await getAll()\r\n            updateCats(reBooks)\r\n        }\r\n        fetchBooks()\r\n    },[])\r\n    \r\n    const updateCats = (books)=>{\r\n        const reads = []\r\n        const wantToReads = []\r\n        const currentlyReadings = []\r\n        const obj = {}\r\n\r\n        books.forEach((book)=>{\r\n            if(book.shelf === 'read') {\r\n              reads.push(book)\r\n            }\r\n            if(book.shelf === 'wantToRead') {\r\n                wantToReads.push(book)\r\n            }\r\n            if(book.shelf === 'currentlyReading') {\r\n              currentlyReadings.push(book)\r\n            }\r\n            obj[book.id] = book.shelf\r\n        })\r\n        updateRead(reads)\r\n        updateCurrentlyReading(currentlyReadings)\r\n        updateWantToRead(wantToReads)\r\n        updateIDHolder(obj)\r\n    }\r\n\r\n    const changeShelf = async (book)=>{\r\n      await update(book, book.shelf)\r\n      let reBooks = await getAll()\r\n      updateCats(reBooks)\r\n    }\r\n    const [searchedBooks, updateSearchedBooks] = useState([])\r\n    const updateSearch = async(val)=>{\r\n        \r\n        let res = await search(val)\r\n        if(res !== undefined && res.error !== 'empty query') {\r\n          const syncedBooks = res.map((book)=>{\r\n            if(book.id in idHolder) {\r\n              book.shelf = idHolder[book.id]\r\n            } else {\r\n              book.shelf = 'none'\r\n            }\r\n            return book\r\n          })\r\n          updateSearchedBooks(syncedBooks)\r\n        } else {\r\n          updateSearchedBooks([])\r\n        }\r\n    }\r\n  return (\r\n    <div className=\"app\">\r\n        <Routes>\r\n          <Route path=\"/reactNanoProject\" exact element={<ListBooks changeShelf={changeShelf} read={read} wantToRead={wantToRead} currentlyReading={currentlyReading} />} />\r\n          <Route path=\"/search\" exact element={<SearchBook onTextEntered={updateSearch} searchedBooks={searchedBooks} changeShelf={changeShelf} />} />\r\n        </Routes>\r\n        {/* <ListBooks  changeShelf={changeShelf} read={read} wantToResad={wantToRead} currentlyReading={currentlyReading}/> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}